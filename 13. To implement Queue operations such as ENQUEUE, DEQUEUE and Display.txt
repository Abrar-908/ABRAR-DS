#include <stdio.h>
#define MAX 100

int queue[MAX];
int front = 0, rear = -1;

// Function to check if queue is full
int isFull() {
    return rear == MAX - 1;
}

// Function to check if queue is empty
int isEmpty() {
    return front > rear;
}

// ENQUEUE operation
void enqueue(int val) {
    if (isFull()) {
        printf("Queue Overflow! Cannot insert %d\n", val);
    } else {
        queue[++rear] = val;
        printf("%d enqueued into queue.\n", val);
    }
}

// DEQUEUE operation
void dequeue() {
    if (isEmpty()) {
        printf("Queue Underflow! Queue is empty.\n");
    } else {
        printf("%d dequeued from queue.\n", queue[front++]);
    }
}

// Display queue
void display() {
    if (isEmpty()) {
        printf("Queue is empty.\n");
    } else {
        printf("Queue elements: ");
        for (int i = front; i <= rear; i++) {
            printf("%d ", queue[i]);
        }
        printf("\n");
    }
}

int main() {
    int choice, val;

    while (1) {
        printf("\n--- Queue Operations ---\n");
        printf("1. ENQUEUE\n2. DEQUEUE\n3. Display\n4. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);

        switch (choice) {
            case 1:
                printf("Enter value to ENQUEUE: ");
                scanf("%d", &val);
                enqueue(val);
                break;
            case 2:
                dequeue();
                break;
            case 3:
                display();
                break;
            case 4:
                return 0;
            default:
                printf("Invalid choice! Try again.\n");
        }
    }
}
